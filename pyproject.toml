[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "sistema-alojamientos-mvp"
version = "0.9.9"
description = "Sistema MVP de reservas de alojamientos con automatizaciÃ³n WhatsApp"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "Sistema Alojamientos Contributors"}
]
keywords = ["fastapi", "whatsapp", "reservations", "booking", "mvp"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
]

[project.urls]
Homepage = "https://github.com/eevans-d/SIST_CABANAS_MVP"
Documentation = "https://github.com/eevans-d/SIST_CABANAS_MVP/blob/main/README.md"
Repository = "https://github.com/eevans-d/SIST_CABANAS_MVP"
Issues = "https://github.com/eevans-d/SIST_CABANAS_MVP/issues"
Changelog = "https://github.com/eevans-d/SIST_CABANAS_MVP/blob/main/CHANGELOG.md"

# Black configuration
[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["*/migrations/*", "*/venv/*", "*/.venv/*"]

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["backend/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--showlocals",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests (need real DB)",
    "unit: marks tests as unit tests (use SQLite)",
]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

# coverage configuration
[tool.coverage.run]
source = ["backend/app"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]
branch = true

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "backend/htmlcov"

# mypy configuration
[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

[[tool.mypy.overrides]]
module = [
    "faster_whisper.*",
    "mercadopago.*",
    "dateparser.*",
]
ignore_missing_imports = true

# bandit configuration (security)
[tool.bandit]
exclude_dirs = [
    "tests",
    ".venv",
    "venv",
]
skips = [
    "B101",  # assert_used (common in tests)
    "B601",  # paramiko_calls
]

# ruff configuration (alternative to flake8)
[tool.ruff]
line-length = 100
target-version = "py312"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
]
ignore = [
    "E203",  # whitespace before ':' (conflicts with black)
    "E501",  # line too long (handled by black)
    "W503",  # line break before binary operator
]
exclude = [
    ".git",
    ".venv",
    "venv",
    "__pycache__",
    "migrations",
    "build",
    "dist",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports in __init__
"tests/*" = ["S101"]      # allow asserts in tests

# commitizen configuration
[tool.commitizen]
name = "cz_conventional_commits"
version = "0.9.8"
tag_format = "v$version"
version_files = [
    "pyproject.toml:version",
]
