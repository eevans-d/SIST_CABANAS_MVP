name: Maintenance - Archive Duplicate Repo

on:
  workflow_dispatch:
    inputs:
      repo_names:
        description: "Lista de repos a archivar, separados por coma (ej.: SIST_CABANAS,SIST_CABANAS_DOCS)"
        required: true

permissions:
  contents: read

jobs:
  archive:
    runs-on: ubuntu-latest
    steps:
      - name: Check inputs
        run: |
          echo "Repos a archivar: ${{ github.event.inputs.repo_names }}"
      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh
      - name: Archive repository via API
        env:
          GH_TOKEN: ${{ secrets.REPO_ADMIN_TOKEN }}
          OWNER: ${{ github.repository_owner }}
          TARGETS: ${{ github.event.inputs.repo_names }}
        run: |
          if [ -z "$GH_TOKEN" ]; then
            echo "REPO_ADMIN_TOKEN no configurado; abortando" >&2
            exit 1
          fi
          set -e
          IFS=',' read -ra REPOS <<< "$TARGETS"
          for R in "${REPOS[@]}"; do
            R_TRIM=$(echo "$R" | xargs)
            if [ -z "$R_TRIM" ]; then continue; fi
            # Verificar estado actual antes de intentar archivar
            CURRENT=$(gh api -H "Accept: application/vnd.github+json" "/repos/$OWNER/$R_TRIM" --jq '.archived' || echo "error")
            if [ "$CURRENT" = "error" ]; then
              echo "No se pudo obtener el estado de $OWNER/$R_TRIM. Se omite."
              continue
            fi
            if [ "$CURRENT" = "true" ]; then
              echo "Ya archivado: $OWNER/$R_TRIM. Se omite."
              continue
            fi
            echo "Archivando repo $OWNER/$R_TRIM ..."
            gh api \
              -X PATCH \
              -H "Accept: application/vnd.github+json" \
              "/repos/$OWNER/$R_TRIM" \
              -f archived=true
            echo "Archivado: $OWNER/$R_TRIM"
          done
          echo "All requested repos archived"
