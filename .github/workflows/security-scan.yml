name: Security Scan

on:
  schedule:
    # Ejecutar todos los lunes a las 2 AM UTC
    - cron: '0 2 * * 1'
  workflow_dispatch:

jobs:
  trivy:
    name: Container Security Scan (Trivy)
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t alojamientos-api:latest -f backend/Dockerfile backend/

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'alojamientos-api:latest'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          exit-code: '0'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Generate Trivy report (JSON)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'alojamientos-api:latest'
          format: 'json'
          output: 'trivy-report.json'
          severity: 'CRITICAL,HIGH,MEDIUM'

      - name: Upload Trivy report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: trivy-security-report
          path: trivy-report.json

  dependency-review:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Safety
        run: pip install safety

      - name: Check dependencies
        run: |
          echo "üîç Scanning backend dependencies..."
          safety check -r backend/requirements.txt --full-report --json --output safety-report.json || true

          echo "üìä Summary:"
          cat safety-report.json | python -m json.tool || true

      - name: Upload Safety report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: safety-vulnerability-report
          path: safety-report.json

  secret-scan:
    name: Secret Scan (GitLeaks)
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}

      - name: Upload Gitleaks report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: results.sarif

  summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [trivy, dependency-review, secret-scan]
    if: always()

    steps:
      - name: Generate summary
        run: |
          echo "## üîí Security Scan Summary"
          echo ""
          echo "Scan completed at: $(date -u +"%Y-%m-%d %H:%M:%S UTC")"
          echo ""
          echo "### Results:"
          echo "- Container scan (Trivy): ${{ needs.trivy.result }}"
          echo "- Dependency scan (Safety): ${{ needs.dependency-review.result }}"
          echo "- Secret scan (GitLeaks): ${{ needs.secret-scan.result }}"
          echo ""
          echo "Check artifacts for detailed reports."
