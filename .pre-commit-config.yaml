# Pre-commit hooks configuration
# Install: pip install pre-commit && pre-commit install
# Run manually: pre-commit run --all-files

repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        name: Trim trailing whitespace
      - id: end-of-file-fixer
        name: Fix end of files
      - id: check-yaml
        name: Check YAML syntax
      - id: check-added-large-files
        name: Check for large files
        args: ['--maxkb=500']
      - id: check-merge-conflict
        name: Check for merge conflicts
      - id: check-case-conflict
        name: Check for case conflicts
      - id: check-json
        name: Check JSON syntax
      - id: check-toml
        name: Check TOML syntax
      - id: mixed-line-ending
        name: Fix mixed line endings
        args: ['--fix=lf']

  # Python code formatting with Black
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        name: Format code with Black
        language_version: python3.12
        args: ['--line-length=100']

  # Python linting with Flake8
  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        name: Lint with Flake8
        args: ['--max-line-length=100', '--extend-ignore=E203,W503']
        additional_dependencies: [flake8-docstrings]

  # Python import sorting with isort
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        name: Sort imports with isort
        args: ['--profile=black', '--line-length=100']

  # Security checks with bandit
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        name: Security check with Bandit
        args: ['-c', 'pyproject.toml']
        additional_dependencies: ['bandit[toml]']
        # Skip test files
        exclude: ^backend/tests/

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        name: Lint Dockerfiles

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.6
    hooks:
      - id: shellcheck
        name: Lint shell scripts

  # Commit message linting (Conventional Commits)
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
        name: Check commit message format
        stages: [commit-msg]

# Configuration
default_language_version:
  python: python3.12

fail_fast: false
minimum_pre_commit_version: '2.20.0'
