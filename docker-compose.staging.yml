# ============================================================================
# 🏠 STAGING DEPLOYMENT - Sistema MVP de Automatización de Reservas
# ============================================================================
#
# Configuración para staging (basada en docker-compose.prod.yml)
# Ajustada para testing local con volumes temporales
#

version: '3.8'

services:
  # ============================================================================
  # 🚀 Backend (FastAPI)
  # ============================================================================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      # Core settings
      - ENVIRONMENT=staging
      - DATABASE_URL=postgresql+asyncpg://${DB_USER}:${POSTGRES_PASSWORD}@db:5432/${DB_NAME}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0

      # WhatsApp Business Cloud API (dummy values for staging)
      - WHATSAPP_ACCESS_TOKEN=${WHATSAPP_ACCESS_TOKEN}
      - WHATSAPP_APP_SECRET=${WHATSAPP_APP_SECRET}
      - WHATSAPP_PHONE_ID=${WHATSAPP_PHONE_ID}
      - WHATSAPP_VERIFY_TOKEN=${WHATSAPP_VERIFY_TOKEN}

      # Mercado Pago (dummy values for staging)
      - MERCADOPAGO_ACCESS_TOKEN=${MERCADOPAGO_ACCESS_TOKEN}
      - MERCADOPAGO_WEBHOOK_SECRET=${MERCADOPAGO_WEBHOOK_SECRET}

      # Security & Auth
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ALGORITHM=${JWT_ALGORITHM:-HS256}
      - JWT_EXPIRATION_HOURS=${JWT_EXPIRATION_HOURS:-24}
      - ICS_SALT=${ICS_SALT}

      # Application URLs
      - BASE_URL=${BASE_URL}
      - DOMAIN=${DOMAIN}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}

      # Performance & Limits
      - DB_POOL_SIZE=${DB_POOL_SIZE:-10}
      - DB_MAX_OVERFLOW=${DB_MAX_OVERFLOW:-5}
      - RATE_LIMIT_ENABLED=${RATE_LIMIT_ENABLED:-true}
      - RATE_LIMIT_REQUESTS=${RATE_LIMIT_REQUESTS:-60}
      - RATE_LIMIT_WINDOW_SECONDS=${RATE_LIMIT_WINDOW_SECONDS:-60}

      # Audio & NLU
      - AUDIO_MODEL=${AUDIO_MODEL:-base}
      - AUDIO_MIN_CONFIDENCE=${AUDIO_MIN_CONFIDENCE:-0.6}

      # Background Jobs
      - JOB_EXPIRATION_INTERVAL_SECONDS=${JOB_EXPIRATION_INTERVAL_SECONDS:-60}
      - JOB_ICAL_INTERVAL_SECONDS=${JOB_ICAL_INTERVAL_SECONDS:-300}
      - ICAL_SYNC_MAX_AGE_MINUTES=${ICAL_SYNC_MAX_AGE_MINUTES:-20}

      # Admin Panel
      - ADMIN_ALLOWED_EMAILS=${ADMIN_ALLOWED_EMAILS}
      - ADMIN_CSRF_SECRET=${ADMIN_CSRF_SECRET}

    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - staging-network
    ports:
      - "8000:8000"  # Direct access for staging testing
    volumes:
      - /tmp/cabanas-staging/logs/app:/app/logs
      - /tmp/cabanas-staging/uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ============================================================================
  # 🗄️ PostgreSQL Database
  # ============================================================================
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    volumes:
      - /tmp/cabanas-staging/postgres:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
      - ./database/extensions.sql:/docker-entrypoint-initdb.d/02-extensions.sql:ro
    networks:
      - staging-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ============================================================================
  # 🔴 Redis Cache & Locks
  # ============================================================================
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD}
      --appendonly yes
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    volumes:
      - /tmp/cabanas-staging/redis:/data
    networks:
      - staging-network
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  staging-network:
    driver: bridge
